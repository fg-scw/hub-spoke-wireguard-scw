#cloud-config
users:
  - name: ubuntu
    ssh_authorized_keys:
      - ${ssh_public_key}
    sudo: ALL=(ALL) NOPASSWD:ALL
    groups: users, admin
    shell: /bin/bash

package_update: true
package_upgrade: true

packages:
  - wireguard
  - wireguard-tools
  - iptables
  - iptables-persistent
  - net-tools
  - vim
  - htop
  - curl
  - tcpdump
  - mtr-tiny
  - iftop
  - nload

write_files:
  - path: /etc/wireguard/wg0.conf
    owner: root:root
    permissions: '0600'
    content: |
      [Interface]
      PrivateKey = ${wg_private_key}
      Address = ${wg_local_ip}/24
      ListenPort = ${wg_port}
      MTU = ${wg_mtu}

      # Regles iptables pour NAT et routage
      PostUp = echo 1 > /proc/sys/net/ipv4/ip_forward
      PostUp = iptables -A INPUT -i %i -j ACCEPT
      PostUp = iptables -A FORWARD -i %i -j ACCEPT
      PostUp = iptables -A FORWARD -o %i -j ACCEPT
      PostUp = iptables -A FORWARD -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT
      PostUp = iptables -t nat -A POSTROUTING -s 192.168.1.0/24 ! -d 192.168.1.0/24 -j MASQUERADE
      PostUp = iptables -t mangle -A FORWARD -p tcp --tcp-flags SYN,RST SYN -j TCPMSS --clamp-mss-to-pmtu
      # Routes statiques pour les reseaux prives
      PostUp = ip route add 172.16.0.0/16 dev %i

      PostDown = ip route del 172.16.0.0/16 dev %i
      PostDown = iptables -t mangle -D FORWARD -p tcp --tcp-flags SYN,RST SYN -j TCPMSS --clamp-mss-to-pmtu
      PostDown = iptables -t nat -D POSTROUTING -s 192.168.1.0/24 ! -d 192.168.1.0/24 -j MASQUERADE
      PostDown = iptables -D FORWARD -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT
      PostDown = iptables -D FORWARD -o %i -j ACCEPT
      PostDown = iptables -D FORWARD -i %i -j ACCEPT
      PostDown = iptables -D INPUT -i %i -j ACCEPT

      %{ for peer in peers ~}
      [Peer]
      PublicKey = ${peer.public_key}
      AllowedIPs = ${peer.allowed_ips}
      Endpoint = ${peer.endpoint}
      PersistentKeepalive = 25

      %{ endfor ~}

  - path: /usr/local/bin/wg-monitor.sh
    owner: root:root
    permissions: '0755'
    content: |
      #!/bin/bash
      # Script de monitoring WireGuard
      while true; do
        if ! wg show wg0 > /dev/null 2>&1; then
          echo "$(date): WireGuard down, restarting..." >> /var/log/wireguard-monitor.log
          systemctl restart wg-quick@wg0
        fi
        sleep 60
      done

  - path: /etc/systemd/system/wg-monitor.service
    owner: root:root
    permissions: '0644'
    content: |
      [Unit]
      Description=WireGuard Monitor
      After=wg-quick@wg0.service
      Wants=wg-quick@wg0.service

      [Service]
      Type=simple
      ExecStart=/usr/local/bin/wg-monitor.sh
      Restart=always
      RestartSec=10

      [Install]
      WantedBy=multi-user.target

  - path: /usr/local/bin/wg-stats.sh
    owner: root:root
    permissions: '0755'
    content: |
      #!/bin/bash
      echo "=== Etat WireGuard ==="
      wg show
      echo ""
      echo "=== Connectivite reseau ==="
      ip -4 addr show | grep inet
      echo ""
      echo "=== Table de routage ==="
      ip route
      echo ""
      echo "=== Statistiques NAT ==="
      iptables -t nat -L -n -v | head -20

runcmd:
  # Configuration systeme
  - echo "net.ipv4.ip_forward=1" > /etc/sysctl.d/99-wireguard.conf
  - echo "net.ipv4.conf.all.forwarding=1" >> /etc/sysctl.d/99-wireguard.conf
  - echo "net.ipv4.conf.all.rp_filter=0" >> /etc/sysctl.d/99-wireguard.conf
  - echo "net.ipv4.conf.default.rp_filter=0" >> /etc/sysctl.d/99-wireguard.conf
  - sysctl -p /etc/sysctl.d/99-wireguard.conf
  
  # Configuration des interfaces reseau pour eviter les conflits
  - echo "iface eth1 inet manual" >> /etc/network/interfaces.d/50-cloud-init
  
  # Démarrage de WireGuard
  - systemctl enable wg-quick@wg0
  - systemctl start wg-quick@wg0
  
  # Démarrage du monitoring
  - systemctl daemon-reload
  - systemctl enable wg-monitor.service
  - systemctl start wg-monitor.service
  
  # Sauvegarde des regles iptables
  - netfilter-persistent save
  
  # Vérification du statut apres 10 secondes
  - sleep 10
  - wg show > /var/log/wireguard-initial.log 2>&1
  - ip route > /var/log/routes-initial.log 2>&1
  
  # Message de fin
  - echo "WireGuard Spoke-01 configure avec succes" > /etc/motd
  - echo "Utilisez 'wg-stats.sh' pour voir l'état du VPN" >> /etc/motd